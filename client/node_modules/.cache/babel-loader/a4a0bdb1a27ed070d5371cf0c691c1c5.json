{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { ApolloLink } from '../core/index.js';\nimport { Observable } from '../../utilities/index.js';\nexport function setContext(setter) {\n  return new ApolloLink(function (operation, forward) {\n    var request = __rest(operation, []);\n    return new Observable(function (observer) {\n      var handle;\n      var closed = false;\n      Promise.resolve(request).then(function (req) {\n        return setter(req, operation.getContext());\n      }).then(operation.setContext).then(function () {\n        if (closed) return;\n        handle = forward(operation).subscribe({\n          next: observer.next.bind(observer),\n          error: observer.error.bind(observer),\n          complete: observer.complete.bind(observer)\n        });\n      }).catch(observer.error.bind(observer));\n      return function () {\n        closed = true;\n        if (handle) handle.unsubscribe();\n      };\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}